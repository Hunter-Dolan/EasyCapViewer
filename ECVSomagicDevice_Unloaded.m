/* Copyright (c) 2013, Ben Trask
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE AUTHORS ''AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */
#import "ECVSomagicDevice_Unloaded.h"
#import "ECVDebug.h"

#define RECV(request, idx, val, ...) \
	do { \
		u_int8_t const expected[] = {__VA_ARGS__}; \
		u_int8_t data[] = {__VA_ARGS__}; \
		size_t const length = sizeof(expected); \
		if(![self readRequest:(request) value:(val) index:(idx) length:length data:data]) return; \
		if(memcmp(expected, data, length) != 0) ECVLog(ECVNotice, @"Line %d, read %04x: Expected %@, received %@", __LINE__, (idx), [NSData dataWithBytesNoCopy:(void *)expected length:length freeWhenDone:NO], [NSData dataWithBytesNoCopy:(void *)data length:length freeWhenDone:NO]); \
	} while(0)
#define SEND(request, idx, val, ...) \
	do { \
		u_int8_t data[] = {__VA_ARGS__}; \
		if(![self writeRequest:(request) value:(val) index:(idx) length:sizeof(data) data:data]) return; \
	} while(0)

@implementation ECVSomagicDevice_Unloaded

#pragma mark -ECVCaptureDevice

- (void)read
{
	// GET_DESCRIPTOR_FROM_DEVICE
	// GET_DESCRIPTOR_FROM_DEVICE
	// GET_DESCRIPTOR_FROM_DEVICE
	// SELECT_CONFIGURATION
	RECV(kUSBRqClearFeature, 0x0000, 0x0001, 0x01, 0x07);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x0c, 0x94, 0xcc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0c, 0x94, 0x93, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x15, 0x47);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x15, 0x49, 0x15, 0x00, 0x07, 0x01, 0x12, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x88, 0x1c, 0x3f, 0x00, 0x00, 0x01, 0x01, 0x02, 0x03, 0x01, 0x0a, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x09, 0x02, 0x32, 0x00, 0x01, 0x01, 0x00, 0x80, 0xfa, 0x09, 0x07, 0x32, 0x00, 0x01, 0x01, 0x00, 0x80, 0xfa, 0x09, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x09);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x04, 0x00, 0x01, 0x01, 0xff, 0xff, 0xff, 0x00, 0x07, 0x05, 0x82, 0x05, 0xff, 0x03, 0x01, 0x09, 0x04, 0x00, 0x02, 0x01, 0xff, 0xff, 0xff, 0x00, 0x07, 0x05, 0x82, 0x05, 0x00, 0x14, 0x01, 0x07, 0x05, 0x82, 0x05, 0xff, 0x03, 0x01, 0x04, 0x03, 0x09, 0x04, 0x22, 0x03, 0x20, 0x00, 0x53, 0x00, 0x6f, 0x00, 0x6d, 0x00, 0x61, 0x00, 0x67, 0x00, 0x69, 0x00, 0x63, 0x00, 0x2c, 0x00);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x00, 0x49, 0x00, 0x6e, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x20, 0x00, 0x20, 0x00, 0x22, 0x03, 0x20, 0x00, 0x53, 0x00, 0x4d, 0x00, 0x49, 0x00, 0x20, 0x00, 0x47, 0x00, 0x72, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x65, 0x00, 0x72, 0x00, 0x20, 0x00, 0x44, 0x00, 0x65, 0x00, 0x76, 0x00, 0x2a, 0x03, 0x53, 0x00, 0x4d, 0x00, 0x49, 0x00, 0x56, 0x00, 0x49, 0x00, 0x44, 0x00);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x45, 0x00, 0x4f, 0x00, 0x33, 0x00, 0x45, 0x00, 0x39, 0x00, 0x38, 0x00, 0x37, 0x00, 0x36, 0x00, 0x35, 0x00, 0x34, 0x00, 0x33, 0x00, 0x32, 0x00, 0x31, 0x00, 0x30, 0x00, 0xe0, 0x00, 0xe4, 0x00, 0x06, 0x01, 0x28, 0x01, 0x01, 0x00, 0x00, 0x00, 0x53, 0x4d, 0x49, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x33, 0x45, 0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, 0x30, 0x00, 0x20);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x53, 0x4d, 0x49, 0x20, 0x47, 0x72, 0x61, 0x62, 0x62, 0x65, 0x72, 0x20, 0x44, 0x65, 0x76, 0x00, 0x20, 0x53, 0x6f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x2c, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x20, 0x20, 0x00, 0x00, 0x00, 0xff, 0xcf, 0xef, 0xdf, 0xe0, 0xcd, 0xbf, 0xde, 0xbf, 0xc0, 0x51, 0xd0, 0x40, 0x0a, 0xea, 0x08, 0x83, 0x00, 0x24, 0xe7, 0xe9, 0xf1, 0xe0, 0x12, 0xe0, 0xe9, 0x3e);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xf1, 0x07, 0x11, 0xf0, 0x01, 0x92, 0xfb, 0xcf, 0x00, 0x83, 0xe0, 0xe6, 0xf0, 0xe0, 0xa0, 0xe6, 0xb0, 0xe0, 0x11, 0xe0, 0xe7, 0x39, 0xf1, 0x07, 0x21, 0xf0, 0xc8, 0x95, 0x31, 0x96, 0x0d, 0x92, 0xf9, 0xcf, 0x0e, 0x94, 0x45, 0x04, 0xff, 0xcf, 0x0e, 0x94, 0xce, 0x0c, 0x22, 0x24, 0x20, 0x92, 0x70, 0x00, 0x20, 0x90, 0xd0, 0x02, 0x20, 0x92, 0xbb, 0x01, 0x8b, 0xeb, 0x91, 0xe0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x90, 0x93, 0xe3, 0x02, 0x80, 0x93, 0xe2, 0x02, 0x20, 0x90, 0xcf, 0x02, 0x22, 0x20, 0x59, 0xf4, 0x90, 0x93, 0xe3, 0x02, 0x80, 0x93, 0xe2, 0x02, 0x85, 0xe0, 0x90, 0xe0, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0xab, 0xc0, 0x40, 0x91, 0xbb, 0x01, 0x55, 0x27, 0x4b, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0x09, 0xf4, 0x3f, 0xc0, 0x4c, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0x09, 0xf4);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x3a, 0xc0, 0x4d, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0xb1, 0xf1, 0x8d, 0xe0, 0x90, 0xe0, 0x84, 0x17, 0x95, 0x07, 0x2c, 0xf0, 0x41, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0x39, 0xf0, 0x77, 0xc0, 0x4b, 0x3f, 0xe0, 0xe0, 0x5e, 0x07, 0x09, 0xf4, 0x66, 0xc0, 0x71, 0xc0, 0x80, 0x91, 0xdd, 0x02, 0x83, 0x30, 0x21, 0xf4, 0x83, 0xe0, 0x80, 0x93, 0xbc, 0x01, 0x17, 0xc0, 0x80, 0x91, 0xdd, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x85, 0x30, 0x21, 0xf4, 0x85, 0xe0, 0x80, 0x93, 0xbc, 0x01, 0x0f, 0xc0, 0x80, 0x91, 0xdd, 0x02, 0x82, 0x30, 0x21, 0xf4, 0x82, 0xe0, 0x80, 0x93, 0xbc, 0x01, 0x07, 0xc0, 0x80, 0x91, 0xdd, 0x02, 0x84, 0x30, 0x19, 0xf4, 0x84, 0xe0, 0x80, 0x93, 0xbc, 0x01, 0x82, 0xe0, 0x90, 0xe0, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x4d, 0xc0, 0x20, 0x90, 0xb7, 0x01, 0x20, 0x92);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xbc, 0x01, 0x20, 0x90, 0xb8, 0x01, 0x20, 0x92, 0xbd, 0x01, 0x20, 0x90, 0xb9, 0x01, 0x20, 0x92, 0xbe, 0x01, 0x20, 0x90, 0xba, 0x01, 0x20, 0x92, 0xbf, 0x01, 0x80, 0x91, 0xb9, 0x01, 0x8f, 0x70, 0x42, 0x2d, 0x48, 0x0f, 0x66, 0x27, 0x0f, 0xc0, 0x87, 0xe9, 0x91, 0xe0, 0xe6, 0x2f, 0xff, 0x27, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x80, 0x80, 0xec, 0x91, 0xe0, 0xe6, 0x2f, 0xff, 0x27);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x82, 0x63, 0x95, 0x64, 0x17, 0x78, 0xf3, 0x20, 0x91, 0xbb, 0x01, 0x33, 0x27, 0x2b, 0x50, 0x30, 0x40, 0x01, 0xe0, 0x10, 0xe0, 0x0e, 0x94, 0xe7, 0x0c, 0x80, 0x2f, 0x91, 0x2f, 0x88, 0x0f, 0x99, 0x1f, 0x88, 0x0f, 0x99, 0x1f, 0x88, 0x0f, 0x99, 0x1f, 0x05, 0x96, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x0e, 0xc0, 0x81, 0xe0, 0x80, 0x93);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xd9, 0x02, 0x80, 0x93, 0xbc, 0x01, 0x82, 0xe0, 0x90, 0xe0, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x02, 0xc0, 0x0e, 0x94, 0x2b, 0x08, 0x22, 0x24, 0x20, 0x92, 0xb7, 0x01, 0x20, 0x92, 0xb8, 0x01, 0x20, 0x92, 0xb9, 0x01, 0x20, 0x92, 0x97, 0x01, 0x20, 0x92, 0x98, 0x01, 0x20, 0x92, 0x99, 0x01, 0x20, 0x92, 0x9a, 0x01, 0x20, 0x92, 0x9b, 0x01, 0x20, 0x92, 0x9c, 0x01);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x92, 0x9d, 0x01, 0x20, 0x92, 0x9e, 0x01, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0x49, 0xf0, 0x81, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x22, 0x24, 0x33, 0x24, 0x30, 0x92, 0xe5, 0x02, 0x20, 0x92, 0xe4, 0x02, 0x0e, 0x94, 0xbf, 0x0c, 0x08, 0x95, 0x22, 0x24, 0x20, 0x92, 0x70, 0x00, 0x8b, 0xeb, 0x91, 0xe0, 0x90, 0x93, 0xe3, 0x02, 0x80, 0x93, 0xe2, 0x02, 0x20, 0x90, 0xd4, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x30, 0x90, 0xd5, 0x02, 0x30, 0x92, 0xe7, 0x02, 0x20, 0x92, 0xe6, 0x02, 0x00, 0x91, 0xd0, 0x02, 0x80, 0x91, 0xcf, 0x02, 0x80, 0x35, 0x39, 0xf5, 0x01, 0x30, 0x39, 0xf4, 0x85, 0xb3, 0x8c, 0x7f, 0x85, 0xbb, 0x85, 0xb3, 0x83, 0x60, 0x85, 0xbb, 0x11, 0xc0, 0x02, 0x30, 0x29, 0xf4, 0x85, 0xb3, 0x8c, 0x7f, 0x85, 0xbb, 0xa8, 0x9a, 0x0a, 0xc0, 0x03, 0x30, 0x29, 0xf4, 0x85, 0xb3);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x8c, 0x7f, 0x85, 0xbb, 0xa9, 0x9a, 0x03, 0xc0, 0x85, 0xb3, 0x8c, 0x7f, 0x85, 0xbb, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0x0d, 0xc0, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0x49, 0xf0, 0x82, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x22, 0x24, 0x33, 0x24, 0x30, 0x92, 0xe5, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x92, 0xe4, 0x02, 0x08, 0x95, 0x0e, 0x94, 0xc8, 0x0c, 0x28, 0x97, 0x80, 0xe1, 0x8f, 0x83, 0x80, 0x91, 0xbb, 0x01, 0x81, 0x30, 0x09, 0xf0, 0x88, 0xc0, 0x22, 0x24, 0x20, 0x92, 0x38, 0x15, 0x20, 0x92, 0x3c, 0x15, 0x20, 0x90, 0xbc, 0x01, 0x20, 0x92, 0xdd, 0x02, 0x82, 0x2d, 0x83, 0x30, 0xc9, 0xf4, 0x85, 0xe2, 0x80, 0x93, 0x31, 0x15, 0x80, 0x91, 0x30, 0x15, 0x89, 0x7f);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x80, 0x93, 0x30, 0x15, 0x28, 0x2e, 0x20, 0x92, 0x30, 0x15, 0x85, 0xe1, 0x80, 0x93, 0x21, 0x15, 0x80, 0x91, 0x20, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x20, 0x15, 0x82, 0x60, 0x80, 0x93, 0x20, 0x15, 0x0e, 0x94, 0x08, 0x05, 0x56, 0xc0, 0x80, 0x91, 0xdd, 0x02, 0x82, 0x30, 0xc9, 0xf4, 0x85, 0xe2, 0x80, 0x93, 0x21, 0x15, 0x80, 0x91, 0x20, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x20, 0x15);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x28, 0x2e, 0x20, 0x92, 0x20, 0x15, 0x85, 0xe1, 0x80, 0x93, 0x31, 0x15, 0x80, 0x91, 0x30, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x30, 0x15, 0x82, 0x60, 0x80, 0x93, 0x30, 0x15, 0x0e, 0x94, 0xfb, 0x04, 0x39, 0xc0, 0x80, 0x91, 0xdd, 0x02, 0x85, 0x30, 0xc9, 0xf4, 0x85, 0xe2, 0x80, 0x93, 0x31, 0x15, 0x80, 0x91, 0x30, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x30, 0x15, 0x28, 0x2e, 0x20, 0x92);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x30, 0x15, 0x85, 0xe1, 0x80, 0x93, 0x21, 0x15, 0x80, 0x91, 0x20, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x20, 0x15, 0x82, 0x60, 0x80, 0x93, 0x20, 0x15, 0x0e, 0x94, 0x13, 0x05, 0x1c, 0xc0, 0x80, 0x91, 0xdd, 0x02, 0x84, 0x30, 0xc1, 0xf4, 0x85, 0xe2, 0x80, 0x93, 0x21, 0x15, 0x80, 0x91, 0x20, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x20, 0x15, 0x28, 0x2e, 0x20, 0x92, 0x20, 0x15, 0x85, 0xe1);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x80, 0x93, 0x31, 0x15, 0x80, 0x91, 0x30, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x30, 0x15, 0x82, 0x60, 0x80, 0x93, 0x30, 0x15, 0x0e, 0x94, 0x01, 0x05, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0x9d, 0xc1, 0x40, 0x91, 0xbf, 0x01, 0x80, 0x91, 0xbe, 0x01, 0x8f, 0x70, 0xe8, 0x2e);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x90, 0xbe, 0x01, 0x27, 0xfe, 0x02, 0xc0, 0x82, 0x30, 0x79, 0xf4, 0x80, 0x91, 0xbd, 0x01, 0x80, 0x7c, 0x80, 0x38, 0x11, 0xf4, 0xee, 0x20, 0x41, 0xf4, 0x80, 0x91, 0xbd, 0x01, 0x80, 0x7c, 0x80, 0x3c, 0x31, 0xf4, 0x8e, 0x2d, 0x81, 0x30, 0x19, 0xf0, 0x0e, 0x94, 0x2b, 0x08, 0x7f, 0xc1, 0x20, 0x90, 0xbe, 0x01, 0x27, 0xfe, 0x9d, 0xc0, 0x20, 0x90, 0xbd, 0x01, 0x25, 0xfe);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x5b, 0xc0, 0x20, 0x90, 0xc0, 0x01, 0x2e, 0x82, 0x20, 0x90, 0xc1, 0x01, 0x2d, 0x82, 0x20, 0x90, 0xc0, 0x01, 0x20, 0x92, 0x97, 0x01, 0x20, 0x90, 0xc1, 0x01, 0x20, 0x92, 0x98, 0x01, 0xcc, 0x24, 0x37, 0xc0, 0x24, 0x2e, 0x33, 0x24, 0x4d, 0x80, 0x5e, 0x80, 0x42, 0x0c, 0x53, 0x1c, 0x86, 0xe0, 0x96, 0xe1, 0x84, 0x15, 0x95, 0x05, 0xe8, 0xf0, 0x8d, 0x81, 0x9e, 0x81, 0x80, 0x30);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe6, 0xe1, 0x9e, 0x07, 0xb8, 0xf0, 0x80, 0x91, 0x00, 0x16, 0x83, 0x70, 0x81, 0x30, 0x91, 0xf4, 0x8d, 0xeb, 0x92, 0xe0, 0xec, 0x2d, 0xff, 0x27, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x80, 0x89, 0xe9, 0x91, 0xe0, 0xec, 0x2d, 0xff, 0x27, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x82, 0x81, 0xe0, 0x80, 0x93, 0xbd, 0x02, 0x0e, 0xc0, 0x2c, 0x2c, 0x33, 0x24, 0xed, 0x81, 0xfe, 0x81, 0xe2, 0x0d);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xf3, 0x1d, 0x20, 0x80, 0x89, 0xe9, 0x91, 0xe0, 0xec, 0x2d, 0xff, 0x27, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x82, 0xc3, 0x94, 0xc4, 0x16, 0x08, 0xf4, 0xc6, 0xcf, 0x20, 0x90, 0xbc, 0x01, 0x20, 0x92, 0xb7, 0x01, 0x20, 0x90, 0xbd, 0x01, 0x20, 0x92, 0xb8, 0x01, 0x20, 0x90, 0xbe, 0x01, 0x20, 0x92, 0xb9, 0x01, 0x20, 0x90, 0xbf, 0x01, 0x20, 0x92, 0xba, 0x01, 0x31, 0xc0, 0x20, 0x90);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xc0, 0x01, 0x2e, 0x82, 0x20, 0x90, 0xc1, 0x01, 0x2d, 0x82, 0x22, 0x20, 0x89, 0xf4, 0x8e, 0x81, 0x86, 0x31, 0x71, 0xf4, 0x80, 0xec, 0x91, 0xe0, 0xee, 0x2d, 0xff, 0x27, 0xe8, 0x0f, 0xf9, 0x1f, 0x80, 0x81, 0x81, 0x38, 0x29, 0xf4, 0x81, 0xe0, 0x80, 0x93, 0x00, 0x16, 0x0e, 0x94, 0x85, 0x05, 0xcc, 0x24, 0x14, 0xc0, 0x2c, 0x2c, 0x33, 0x24, 0xee, 0x2d, 0xff, 0x27, 0x35, 0x96);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe2, 0x0d, 0xf3, 0x1d, 0x8b, 0xeb, 0x91, 0xe0, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x80, 0x3c, 0x2c, 0x44, 0x24, 0xed, 0x81, 0xfe, 0x81, 0xe3, 0x0d, 0xf4, 0x1d, 0x20, 0x82, 0xc3, 0x94, 0xc4, 0x16, 0x50, 0xf3, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0xde, 0xc0, 0x20, 0x90);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xbe, 0x01, 0x24, 0xfe, 0x29, 0xc0, 0xcc, 0x24, 0x0f, 0xc0, 0x80, 0xe6, 0x90, 0xe0, 0xec, 0x2d, 0xff, 0x27, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x80, 0x87, 0xe9, 0x91, 0xe0, 0xec, 0x2d, 0xff, 0x27, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x82, 0xc3, 0x94, 0x8c, 0x2d, 0x80, 0x31, 0x70, 0xf3, 0x20, 0x90, 0xbe, 0x01, 0x20, 0x92, 0xb9, 0x01, 0x20, 0x90, 0xbf, 0x01, 0x20, 0x92, 0xba, 0x01);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0xb1, 0xc0, 0x81, 0xe0, 0x80, 0x93, 0xdf, 0x02, 0x80, 0x91, 0xbe, 0x01, 0x80, 0x74, 0xa8, 0x2e, 0xa6, 0x94, 0xa6, 0x94, 0xa6, 0x94, 0xa6, 0x94, 0xa6, 0x94, 0xa6, 0x94, 0xaa, 0x20, 0x19, 0xf0, 0x65, 0xe8, 0x71, 0xe3, 0x02, 0xc0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x65, 0xe8, 0x77, 0xe1, 0x20, 0x90, 0xbd, 0x01, 0x25, 0xfe, 0x5b, 0xc0, 0x13, 0xc0, 0xac, 0x82, 0x20, 0x90, 0xc0, 0x01, 0x2a, 0x82, 0x20, 0x90, 0xbf, 0x01, 0x28, 0x82, 0x20, 0x91, 0xbd, 0x01, 0x00, 0x91, 0xbc, 0x01, 0x0e, 0x94, 0x3f, 0x05, 0x00, 0x23, 0x09, 0xf0, 0x07, 0xc0, 0x0f, 0x80, 0x0a, 0x94, 0x0f, 0x82, 0x22, 0x24, 0x0f, 0x80, 0x20, 0x14, 0x48, 0xf3, 0xcc, 0x24);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x0f, 0xc0, 0x80, 0xec, 0x91, 0xe0, 0xec, 0x2d, 0xff, 0x27, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x80, 0x87, 0xe9, 0x91, 0xe0, 0xec, 0x2d, 0xff, 0x27, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x82, 0xc3, 0x94, 0xce, 0x14, 0x78, 0xf3, 0xcc, 0x24, 0x12, 0xc0, 0x2c, 0x2c, 0x33, 0x24, 0xee, 0x2d, 0xff, 0x27, 0xe2, 0x0d, 0xf3, 0x1d, 0x87, 0xe9, 0x91, 0xe0, 0xe8, 0x0f, 0xf9, 0x1f, 0x33, 0x24);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xa6, 0x2f, 0xb7, 0x2f, 0xa2, 0x0d, 0xb3, 0x1d, 0x2c, 0x90, 0x20, 0x82, 0xc3, 0x94, 0xc4, 0x16, 0x60, 0xf3, 0x20, 0x90, 0xbc, 0x01, 0x20, 0x92, 0xb7, 0x01, 0x0f, 0x80, 0x00, 0x20, 0x31, 0xf4, 0x80, 0x91, 0xbd, 0x01, 0x81, 0x60, 0x80, 0x93, 0xb8, 0x01, 0x04, 0xc0, 0x20, 0x90, 0xbd, 0x01, 0x20, 0x92, 0xb8, 0x01, 0x20, 0x90, 0xbe, 0x01, 0x20, 0x92, 0xb9, 0x01, 0x20, 0x90);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xbf, 0x01, 0x20, 0x92, 0xba, 0x01, 0x32, 0xc0, 0xcc, 0x24, 0x14, 0xc0, 0x2c, 0x2c, 0x33, 0x24, 0xee, 0x2d, 0xff, 0x27, 0x35, 0x96, 0xe2, 0x0d, 0xf3, 0x1d, 0x8b, 0xeb, 0x91, 0xe0, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x80, 0x3c, 0x2c, 0x44, 0x24, 0xe6, 0x2f, 0xf7, 0x2f, 0xe3, 0x0d, 0xf4, 0x1d, 0x20, 0x82, 0xc3, 0x94, 0xc4, 0x16, 0x50, 0xf3, 0x80, 0xe1, 0x8f, 0x83, 0x13, 0xc0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xac, 0x82, 0x20, 0x90, 0xc0, 0x01, 0x2a, 0x82, 0x20, 0x90, 0xbf, 0x01, 0x28, 0x82, 0x20, 0x91, 0xbd, 0x01, 0x00, 0x91, 0xbc, 0x01, 0x0e, 0x94, 0x3f, 0x05, 0x00, 0x23, 0x09, 0xf0, 0x07, 0xc0, 0x0f, 0x80, 0x0a, 0x94, 0x0f, 0x82, 0x22, 0x24, 0x0f, 0x80, 0x20, 0x14, 0x48, 0xf3, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0x28, 0x96, 0x0e, 0x94, 0xc5, 0x0c, 0x08, 0x95, 0x8f, 0xef, 0x8a, 0xbb, 0x83, 0xe0, 0x80, 0x93, 0xdd, 0x02, 0x22, 0x24, 0x20, 0x92, 0x82, 0x17, 0x20, 0x92, 0x82, 0x31, 0x82, 0x30, 0x09, 0xf4, 0xa9, 0xd0, 0x80, 0x91, 0xdd, 0x02, 0x83, 0x30, 0x09, 0xf4, 0xb1, 0xd0, 0x80, 0x91, 0xdd, 0x02, 0x85, 0x30, 0x09, 0xf4, 0xb7, 0xd0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x80, 0x91, 0xdd, 0x02, 0x84, 0x30, 0x09, 0xf4, 0xa0, 0xd0, 0x36, 0xd0, 0x78, 0x94, 0x32, 0xc0, 0x0e, 0x94, 0x93, 0x05, 0x80, 0x91, 0xd6, 0x02, 0x81, 0x30, 0x29, 0xf4, 0x22, 0x24, 0x20, 0x92, 0xd6, 0x02, 0x0e, 0x94, 0x11, 0x06, 0x80, 0x91, 0xd7, 0x02, 0x81, 0x30, 0x29, 0xf4, 0x22, 0x24, 0x20, 0x92, 0xd7, 0x02, 0x0e, 0x94, 0xcd, 0x05, 0x80, 0x91, 0xdb, 0x02, 0x81, 0x30);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x29, 0xf4, 0x22, 0x24, 0x20, 0x92, 0xdb, 0x02, 0x0e, 0x94, 0xe1, 0x05, 0x80, 0x91, 0xd9, 0x02, 0x81, 0x30, 0x41, 0xf4, 0x22, 0x24, 0x20, 0x92, 0xd9, 0x02, 0x80, 0x91, 0x80, 0x30, 0x8f, 0x77, 0x80, 0x93, 0x80, 0x30, 0x80, 0x91, 0xde, 0x02, 0x81, 0x30, 0x29, 0xf4, 0x22, 0x24, 0x20, 0x92, 0xde, 0x02, 0x0e, 0x94, 0x01, 0x06, 0xcd, 0xcf, 0x08, 0x95, 0x22, 0x24, 0x20, 0x92);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xd6, 0x02, 0x20, 0x92, 0xd7, 0x02, 0x20, 0x92, 0xd9, 0x02, 0x20, 0x92, 0xdc, 0x02, 0x20, 0x92, 0xda, 0x02, 0x20, 0x92, 0xdb, 0x02, 0x20, 0x92, 0xde, 0x02, 0x20, 0x92, 0xdf, 0x02, 0x84, 0xec, 0x80, 0x93, 0x07, 0x15, 0x83, 0xe0, 0x80, 0x93, 0x11, 0x15, 0x80, 0x91, 0x10, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x10, 0x15, 0x28, 0x2e, 0x20, 0x92, 0x10, 0x15, 0x80, 0xe4, 0x80, 0x93);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x13, 0x15, 0x80, 0xe0, 0x90, 0xe2, 0x90, 0x93, 0x1a, 0x15, 0x80, 0x93, 0x19, 0x15, 0x80, 0xe4, 0x90, 0x93, 0x1e, 0x15, 0x80, 0x93, 0x1d, 0x15, 0x80, 0x93, 0x15, 0x15, 0x85, 0xe1, 0x80, 0x93, 0x21, 0x15, 0x80, 0x91, 0x20, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x20, 0x15, 0x28, 0x2e, 0x20, 0x92, 0x20, 0x15, 0x8f, 0xef, 0x93, 0xe0, 0x90, 0x93, 0x24, 0x15, 0x80, 0x93, 0x23, 0x15);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x85, 0xe2, 0x80, 0x93, 0x31, 0x15, 0x80, 0x91, 0x30, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x30, 0x15, 0x28, 0x2e, 0x20, 0x92, 0x30, 0x15, 0x8f, 0xef, 0x90, 0x93, 0x34, 0x15, 0x80, 0x93, 0x33, 0x15, 0x0e, 0x94, 0x0d, 0x06, 0x08, 0xec, 0x10, 0xe0, 0x2f, 0xd0, 0x80, 0x91, 0x00, 0x15, 0x88, 0x60, 0x80, 0x93, 0x00, 0x15, 0x00, 0xed, 0x17, 0xe0, 0x27, 0xd0, 0x80, 0x91, 0x00, 0x15);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x87, 0x7f, 0x80, 0x93, 0x00, 0x15, 0x08, 0x95, 0x22, 0x24, 0x20, 0x92, 0x40, 0x17, 0x20, 0x92, 0x80, 0x18, 0x08, 0x95, 0x22, 0x24, 0x20, 0x92, 0x00, 0x31, 0x82, 0xe0, 0x80, 0x93, 0x80, 0x18, 0x08, 0x95, 0x83, 0xe0, 0x80, 0x93, 0x80, 0x15, 0x80, 0x91, 0xdd, 0x02, 0x83, 0x30, 0x19, 0xf4, 0x22, 0x24, 0x20, 0x92, 0x80, 0x18, 0x08, 0x95, 0x22, 0x24, 0x20, 0x92, 0x00, 0x18);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x92, 0x40, 0x17, 0x81, 0xe0, 0x80, 0x93, 0x80, 0x18, 0x08, 0x95, 0x0e, 0x94, 0xce, 0x0c, 0x4e, 0xe1, 0x66, 0x27, 0x02, 0xc0, 0x00, 0x00, 0x63, 0x95, 0x64, 0x17, 0xe0, 0xf3, 0x01, 0x50, 0x10, 0x40, 0x81, 0xe0, 0x90, 0xe0, 0x80, 0x17, 0x91, 0x07, 0x98, 0xf3, 0x0e, 0x94, 0xbf, 0x0c, 0x08, 0x95, 0x0e, 0x94, 0xd0, 0x0c, 0x40, 0x2f, 0x51, 0x2f, 0x05, 0xc0, 0x08, 0xee);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x13, 0xe0, 0xe5, 0xdf, 0x41, 0x50, 0x50, 0x40, 0x40, 0x30, 0x45, 0x07, 0xc1, 0xf7, 0x0e, 0x94, 0xd3, 0x0c, 0x08, 0x95, 0x0e, 0x94, 0xd0, 0x0c, 0x0e, 0x80, 0x00, 0x20, 0x19, 0xf0, 0x40, 0xe8, 0x51, 0xe3, 0x02, 0xc0, 0x40, 0xe8, 0x57, 0xe1, 0xe4, 0x2f, 0xf5, 0x2f, 0x22, 0x80, 0x24, 0xfe, 0x0c, 0xc0, 0xe4, 0x2f, 0xf5, 0x2f, 0x22, 0x80, 0x33, 0x24, 0x27, 0xfc, 0x02, 0xc0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x26, 0xfe, 0xf8, 0xcf, 0x22, 0x24, 0xe4, 0x2f, 0xf5, 0x2f, 0x22, 0x82, 0xe4, 0x2f, 0xf5, 0x2f, 0x04, 0x83, 0xe4, 0x2f, 0xf5, 0x2f, 0x0c, 0x80, 0x03, 0x82, 0xe4, 0x2f, 0xf5, 0x2f, 0x0a, 0x80, 0x01, 0x82, 0xe4, 0x2f, 0xf5, 0x2f, 0x20, 0x83, 0xe4, 0x2f, 0xf5, 0x2f, 0x22, 0x80, 0x33, 0x24, 0x24, 0xfe, 0x04, 0xc0, 0x27, 0xfc, 0x02, 0xc0, 0x26, 0xfe, 0xf6, 0xcf, 0xe4, 0x2f);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xf5, 0x2f, 0x22, 0x80, 0x25, 0xfe, 0x06, 0xc0, 0x22, 0x24, 0xe4, 0x2f, 0xf5, 0x2f, 0x22, 0x82, 0x00, 0x27, 0x05, 0xc0, 0x22, 0x24, 0xe4, 0x2f, 0xf5, 0x2f, 0x22, 0x82, 0x01, 0xe0, 0x0e, 0x94, 0xd3, 0x0c, 0x08, 0x95, 0xa4, 0x98, 0x08, 0x95, 0x09, 0xb9, 0x88, 0xe1, 0x8a, 0xb9, 0x08, 0x95, 0x5f, 0x9b, 0xfe, 0xcf, 0x0c, 0xb1, 0x08, 0x95, 0x5d, 0x9b, 0xfe, 0xcf, 0x0c, 0xb9);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x08, 0x95, 0x2a, 0x92, 0x8a, 0x93, 0x2f, 0xb6, 0x2a, 0x92, 0x80, 0x91, 0x03, 0x15, 0x81, 0x30, 0xb1, 0xf4, 0x20, 0x90, 0x02, 0x15, 0x24, 0xfe, 0x29, 0xc0, 0x20, 0x90, 0xdf, 0x02, 0x22, 0x20, 0x29, 0xf4, 0x80, 0x91, 0x1c, 0x15, 0x8f, 0x77, 0x80, 0x93, 0x1c, 0x15, 0x81, 0xe0, 0x80, 0x93, 0xd6, 0x02, 0x80, 0x91, 0x02, 0x15, 0x8f, 0x7e, 0x80, 0x93, 0x02, 0x15, 0x17, 0xc0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x80, 0x91, 0x03, 0x15, 0x81, 0x38, 0x21, 0xf4, 0x81, 0xe0, 0x80, 0x93, 0xd7, 0x02, 0x0f, 0xc0, 0x80, 0x91, 0x03, 0x15, 0x80, 0x38, 0x21, 0xf4, 0x81, 0xe0, 0x80, 0x93, 0xdb, 0x02, 0x07, 0xc0, 0x80, 0x91, 0x03, 0x15, 0x85, 0x38, 0x19, 0xf4, 0x81, 0xe0, 0x80, 0x93, 0xde, 0x02, 0x29, 0x90, 0x2f, 0xbe, 0x89, 0x91, 0x29, 0x90, 0x18, 0x95, 0x82, 0xe0, 0x80, 0x93, 0xe8, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x22, 0x24, 0x20, 0x92, 0x71, 0x00, 0x83, 0xe0, 0x80, 0x93, 0x72, 0x00, 0x80, 0x93, 0x73, 0x00, 0x80, 0x93, 0x74, 0x00, 0x80, 0x93, 0x75, 0x00, 0x80, 0x93, 0x76, 0x00, 0x20, 0x92, 0xdf, 0x02, 0x08, 0x95, 0x20, 0x90, 0x01, 0x15, 0x21, 0xfe, 0x0e, 0xc0, 0x81, 0xe0, 0x80, 0x93, 0xda, 0x02, 0x80, 0xe0, 0x94, 0xe0, 0x90, 0x93, 0x24, 0x15, 0x80, 0x93, 0x23, 0x15, 0x90, 0x93);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x34, 0x15, 0x80, 0x93, 0x33, 0x15, 0x0d, 0xc0, 0x22, 0x24, 0x20, 0x92, 0xda, 0x02, 0x8f, 0xef, 0x93, 0xe0, 0x90, 0x93, 0x24, 0x15, 0x80, 0x93, 0x23, 0x15, 0x90, 0x93, 0x34, 0x15, 0x80, 0x93, 0x33, 0x15, 0x08, 0x95, 0x0b, 0xd0, 0x80, 0x91, 0x80, 0x30, 0x80, 0x61, 0x80, 0x93, 0x80, 0x30, 0x80, 0x91, 0x00, 0x15, 0x84, 0x60, 0x80, 0x93, 0x00, 0x15, 0x08, 0x95, 0xa0, 0x9a);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xa2, 0x9a, 0xa8, 0x98, 0x08, 0x95, 0x0e, 0x94, 0xcc, 0x0c, 0x66, 0x27, 0x77, 0x27, 0x80, 0xe4, 0x90, 0xe2, 0x90, 0x93, 0x1e, 0x15, 0x80, 0x93, 0x1d, 0x15, 0x20, 0x90, 0x71, 0x00, 0x22, 0x20, 0x09, 0xf0, 0x69, 0xc0, 0x20, 0x90, 0x18, 0x15, 0x27, 0xfe, 0x65, 0xc0, 0x2e, 0xec, 0x32, 0xe0, 0x08, 0xe0, 0x10, 0xe0, 0x84, 0xd1, 0x80, 0x91, 0x18, 0x15, 0x8f, 0x77, 0x80, 0x93);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x18, 0x15, 0x80, 0x91, 0xdf, 0x02, 0x81, 0x30, 0x29, 0xf4, 0x80, 0x91, 0x1c, 0x15, 0x8f, 0x77, 0x80, 0x93, 0x1c, 0x15, 0x80, 0x91, 0xce, 0x02, 0x80, 0x76, 0x80, 0x34, 0x51, 0xf4, 0x20, 0x90, 0xce, 0x02, 0x27, 0xfe, 0x03, 0xc0, 0x0e, 0x94, 0xed, 0x00, 0x46, 0xc0, 0x0e, 0x94, 0xc6, 0x01, 0x43, 0xc0, 0x40, 0x91, 0xcf, 0x02, 0x55, 0x27, 0x40, 0x30, 0x45, 0x07, 0x09, 0xf1);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x41, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0x01, 0xf1, 0x43, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0xf9, 0xf0, 0x45, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0xf1, 0xf0, 0x46, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0xe9, 0xf0, 0x48, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0xe1, 0xf0, 0x49, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0xd9, 0xf0, 0x4a, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0xd1, 0xf0, 0x4b, 0x30, 0xe0, 0xe0, 0x5e, 0x07);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xc9, 0xf0, 0x1b, 0xc0, 0x0e, 0x94, 0x67, 0x08, 0x19, 0xc0, 0x0e, 0x94, 0x27, 0x09, 0x16, 0xc0, 0x0e, 0x94, 0x83, 0x09, 0x13, 0xc0, 0x0e, 0x94, 0xef, 0x09, 0x10, 0xc0, 0x0e, 0x94, 0x2d, 0x0a, 0x0d, 0xc0, 0x0e, 0x94, 0x89, 0x0b, 0x0a, 0xc0, 0x0e, 0x94, 0xd3, 0x0b, 0x07, 0xc0, 0x0e, 0x94, 0x2c, 0x0c, 0x04, 0xc0, 0x0e, 0x94, 0x7d, 0x0c, 0x01, 0xc0, 0xa2, 0xd1, 0x80, 0x91);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x71, 0x00, 0x85, 0x30, 0x59, 0xf4, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x20, 0x90, 0xd0, 0x02, 0x20, 0x92, 0x04, 0x15, 0x22, 0x24, 0x20, 0x92, 0x71, 0x00, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0x19, 0xf4, 0x22, 0x24, 0x20, 0x92, 0x71, 0x00, 0x80, 0x91, 0x71, 0x00, 0x81, 0x30, 0x09, 0xf0, 0x87, 0xc0, 0x20, 0x90, 0xd4, 0x02, 0x30, 0x90, 0xd5, 0x02, 0x40, 0x90);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe6, 0x02, 0x50, 0x90, 0xe7, 0x02, 0x42, 0x14, 0x53, 0x04, 0x18, 0xf4, 0xa4, 0x2c, 0xb5, 0x2c, 0x04, 0xc0, 0xa0, 0x90, 0xd4, 0x02, 0xb0, 0x90, 0xd5, 0x02, 0x4a, 0x2d, 0x5b, 0x2d, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x80, 0x91, 0xe6, 0x02, 0x90, 0x91, 0xe7, 0x02, 0x80, 0x34, 0xe0, 0xe0, 0x9e, 0x07, 0x78, 0xf1, 0x80, 0x91, 0xdc, 0x02, 0x81, 0x30, 0x61, 0xf4);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x86, 0x2f, 0x97, 0x2f, 0x80, 0x5c, 0x9f, 0x4d, 0x90, 0x93, 0x1e, 0x15, 0x80, 0x93, 0x1d, 0x15, 0x80, 0xe4, 0x80, 0x93, 0x1b, 0x15, 0x03, 0xc0, 0x00, 0xe4, 0x10, 0xe0, 0xf0, 0xd0, 0x80, 0x91, 0xe6, 0x02, 0x90, 0x91, 0xe7, 0x02, 0x80, 0x54, 0x90, 0x40, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x80, 0x91, 0xe4, 0x02, 0x90, 0x91, 0xe5, 0x02, 0x80, 0x5c, 0x9f, 0x4f);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x90, 0x93, 0xe5, 0x02, 0x80, 0x93, 0xe4, 0x02, 0x60, 0x5c, 0x7f, 0x4f, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0x2b, 0xc0, 0x80, 0x91, 0xdc, 0x02, 0x81, 0x30, 0x79, 0xf4, 0x86, 0x2f, 0x97, 0x2f, 0x80, 0x5c, 0x9f, 0x4d, 0x90, 0x93, 0x1e, 0x15, 0x80, 0x93, 0x1d, 0x15, 0x20, 0x90, 0xe6, 0x02, 0x30, 0x90, 0xe7, 0x02, 0x20, 0x92, 0x1b, 0x15, 0x05, 0xc0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x00, 0x91, 0xe6, 0x02, 0x10, 0x91, 0xe7, 0x02, 0xbc, 0xd0, 0x20, 0x90, 0xe6, 0x02, 0x30, 0x90, 0xe7, 0x02, 0x40, 0x90, 0xe4, 0x02, 0x50, 0x90, 0xe5, 0x02, 0x42, 0x0c, 0x53, 0x1c, 0x50, 0x92, 0xe5, 0x02, 0x40, 0x92, 0xe4, 0x02, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0x20, 0x90, 0xe4, 0x02, 0x30, 0x90, 0xe5, 0x02, 0x24, 0x16, 0x35, 0x06, 0x08, 0xf4);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x92, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x71, 0x00, 0x20, 0x92, 0xdc, 0x02, 0x80, 0x91, 0x71, 0x00, 0x82, 0x30, 0x09, 0xf0, 0x7a, 0xc0, 0x20, 0x90, 0xd4, 0x02, 0x30, 0x90, 0xd5, 0x02, 0x40, 0x90, 0xe6, 0x02, 0x50, 0x90, 0xe7, 0x02, 0x42, 0x14, 0x53, 0x04, 0x18, 0xf4, 0x64, 0x2d, 0x75, 0x2d, 0x04, 0xc0, 0x60, 0x91, 0xd4, 0x02, 0x70, 0x91, 0xd5, 0x02, 0x46, 0x2f, 0x57, 0x2f);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x90, 0x18, 0x15, 0x27, 0xfe, 0xfc, 0xcf, 0x80, 0x91, 0xe6, 0x02, 0x90, 0x91, 0xe7, 0x02, 0x80, 0x34, 0xe0, 0xe0, 0x9e, 0x07, 0x58, 0xf1, 0x20, 0x91, 0xe2, 0x02, 0x30, 0x91, 0xe3, 0x02, 0x00, 0xe4, 0x10, 0xe0, 0x56, 0xd0, 0x80, 0x91, 0x18, 0x15, 0x8f, 0x77, 0x80, 0x93, 0x18, 0x15, 0x80, 0x91, 0xe2, 0x02, 0x90, 0x91, 0xe3, 0x02, 0x80, 0x5c, 0x9f, 0x4f, 0x90, 0x93);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe3, 0x02, 0x80, 0x93, 0xe2, 0x02, 0x80, 0x91, 0xe6, 0x02, 0x90, 0x91, 0xe7, 0x02, 0x80, 0x54, 0x90, 0x40, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x80, 0x91, 0xe4, 0x02, 0x90, 0x91, 0xe5, 0x02, 0x80, 0x5c, 0x9f, 0x4f, 0x90, 0x93, 0xe5, 0x02, 0x80, 0x93, 0xe4, 0x02, 0x1c, 0xc0, 0x20, 0x91, 0xe2, 0x02, 0x30, 0x91, 0xe3, 0x02, 0x00, 0x91, 0xe6, 0x02, 0x10, 0x91);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe7, 0x02, 0x29, 0xd0, 0x20, 0x90, 0xe6, 0x02, 0x30, 0x90, 0xe7, 0x02, 0x40, 0x90, 0xe4, 0x02, 0x50, 0x90, 0xe5, 0x02, 0x42, 0x0c, 0x53, 0x1c, 0x50, 0x92, 0xe5, 0x02, 0x40, 0x92, 0xe4, 0x02, 0x80, 0x91, 0x18, 0x15, 0x8f, 0x77, 0x80, 0x93, 0x18, 0x15, 0x20, 0x90, 0xe4, 0x02, 0x30, 0x90, 0xe5, 0x02, 0x24, 0x16, 0x35, 0x06, 0x08, 0xf4, 0xa5, 0xcf, 0x22, 0x24, 0x20, 0x92);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x71, 0x00, 0x22, 0x20, 0x31, 0xf4, 0x20, 0x90, 0xce, 0x02, 0x27, 0xfc, 0x02, 0xc0, 0x0e, 0x94, 0x12, 0x02, 0x0e, 0x94, 0xc2, 0x0c, 0x08, 0x95, 0x0e, 0x94, 0xd0, 0x0c, 0x00, 0x30, 0x01, 0x07, 0x91, 0xf0, 0x44, 0x27, 0x55, 0x27, 0x0c, 0xc0, 0xe4, 0x2f, 0xf5, 0x2f, 0xe2, 0x0f, 0xf3, 0x1f, 0xa4, 0x2f, 0xb5, 0x2f, 0xa0, 0x50, 0xb0, 0x4e, 0x2c, 0x90, 0x20, 0x82, 0x4f, 0x5f);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x5f, 0x4f, 0x40, 0x17, 0x51, 0x07, 0x88, 0xf3, 0x0e, 0x94, 0xd3, 0x0c, 0x08, 0x95, 0x0e, 0x94, 0xd0, 0x0c, 0x00, 0x30, 0x01, 0x07, 0x09, 0xf4, 0x37, 0xc0, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x00, 0x93, 0x1b, 0x15, 0x80, 0x91, 0x70, 0x00, 0x81, 0x30, 0xb9, 0xf4, 0x44, 0x27, 0x55, 0x27, 0x10, 0xc0, 0xe0, 0x91, 0xe0, 0x02, 0xf0, 0x91, 0xe1, 0x02, 0x21, 0x90);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xf0, 0x93, 0xe1, 0x02, 0xe0, 0x93, 0xe0, 0x02, 0xe4, 0x2f, 0xf5, 0x2f, 0xe0, 0x5c, 0xff, 0x4d, 0x20, 0x82, 0x4f, 0x5f, 0x5f, 0x4f, 0x40, 0x17, 0x51, 0x07, 0x68, 0xf3, 0x16, 0xc0, 0x44, 0x27, 0x55, 0x27, 0x10, 0xc0, 0xe0, 0x91, 0xe2, 0x02, 0xf0, 0x91, 0xe3, 0x02, 0x21, 0x90, 0xf0, 0x93, 0xe3, 0x02, 0xe0, 0x93, 0xe2, 0x02, 0xe4, 0x2f, 0xf5, 0x2f, 0xe0, 0x5c, 0xff, 0x4d);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x82, 0x4f, 0x5f, 0x5f, 0x4f, 0x40, 0x17, 0x51, 0x07, 0x68, 0xf3, 0x0e, 0x94, 0xd3, 0x0c, 0x08, 0x95, 0x0e, 0x94, 0xce, 0x0c, 0x6c, 0x81, 0x7d, 0x81, 0x42, 0x2f, 0x53, 0x2f, 0x40, 0x5c, 0x5f, 0x4d, 0x05, 0xc0, 0x80, 0x91, 0xd7, 0x02, 0x81, 0x30, 0x09, 0xf4, 0x13, 0xc0, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xf7, 0xcf, 0xe0, 0x2f, 0xf1, 0x2f, 0xa4, 0x2f, 0xb5, 0x2f);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x01, 0x90, 0x0e, 0x2f, 0x1f, 0x2f, 0x0d, 0x92, 0x4a, 0x2f, 0x5b, 0x2f, 0x61, 0x50, 0x70, 0x40, 0x60, 0x30, 0x67, 0x07, 0x89, 0xf7, 0x0e, 0x94, 0xbf, 0x0c, 0x08, 0x95, 0x80, 0x91, 0x10, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x10, 0x15, 0x84, 0x60, 0x80, 0x93, 0x10, 0x15, 0x84, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x08, 0x95, 0x80, 0x91, 0xdd, 0x02, 0x82, 0x30, 0x31, 0xf4, 0x80, 0x91);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x40, 0x17, 0x85, 0x60, 0x80, 0x93, 0x40, 0x17, 0x20, 0xc0, 0x80, 0x91, 0xdd, 0x02, 0x83, 0x30, 0x31, 0xf4, 0x80, 0x91, 0x80, 0x15, 0x80, 0x68, 0x80, 0x93, 0x80, 0x15, 0x16, 0xc0, 0x80, 0x91, 0xdd, 0x02, 0x85, 0x30, 0x59, 0xf4, 0x80, 0x91, 0x00, 0x18, 0x8d, 0x60, 0x80, 0x93, 0x00, 0x18, 0x80, 0x91, 0x40, 0x17, 0x85, 0x60, 0x80, 0x93, 0x40, 0x17, 0x07, 0xc0, 0x80, 0x91);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xdd, 0x02, 0x84, 0x30, 0x19, 0xf4, 0x81, 0xe0, 0x80, 0x93, 0x00, 0x31, 0x80, 0x91, 0x00, 0x16, 0x80, 0x68, 0x80, 0x93, 0x00, 0x16, 0x08, 0x95, 0x0e, 0x94, 0xd0, 0x0c, 0x20, 0x90, 0xd0, 0x02, 0x30, 0x90, 0xd1, 0x02, 0x22, 0x20, 0x51, 0xf4, 0x33, 0x20, 0x41, 0xf4, 0x80, 0x91, 0xd4, 0x02, 0x90, 0x91, 0xd5, 0x02, 0x82, 0x30, 0xe0, 0xe0, 0x9e, 0x07, 0x11, 0xf0, 0x0e, 0x94);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x2b, 0x08, 0x40, 0x91, 0xce, 0x02, 0x55, 0x27, 0x40, 0x38, 0xe0, 0xe0, 0x5e, 0x07, 0x49, 0xf0, 0x41, 0x38, 0xe0, 0xe0, 0x5e, 0x07, 0xd1, 0xf0, 0x42, 0x38, 0xe0, 0xe0, 0x5e, 0x07, 0x79, 0xf1, 0x84, 0xc0, 0x20, 0x90, 0xd2, 0x02, 0x30, 0x90, 0xd3, 0x02, 0x22, 0x20, 0x11, 0xf4, 0x33, 0x20, 0x19, 0xf0, 0x0e, 0x94, 0x2b, 0x08, 0x7b, 0xc0, 0x8c, 0xe5, 0x91, 0xe0, 0x90, 0x93);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe1, 0x02, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0x71, 0xc0, 0x80, 0x91, 0xe8, 0x02, 0x84, 0x30, 0x41, 0xf4, 0x20, 0x90, 0xd2, 0x02, 0x30, 0x90, 0xd3, 0x02, 0x22, 0x20, 0x11, 0xf4, 0x33, 0x20, 0x19, 0xf0, 0x0e, 0x94, 0x2b, 0x08, 0x62, 0xc0, 0x8c, 0xe5, 0x91, 0xe0, 0x90, 0x93, 0xe1, 0x02, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x58, 0xc0, 0x80, 0x91, 0xe8, 0x02, 0x84, 0x30, 0x21, 0xf4, 0x20, 0x90, 0xd3, 0x02, 0x22, 0x20, 0x19, 0xf0, 0x0e, 0x94, 0x2b, 0x08, 0x4d, 0xc0, 0x40, 0x91, 0xd2, 0x02, 0x55, 0x27, 0x41, 0x38, 0xe0, 0xe0, 0x5e, 0x07, 0x29, 0xf0, 0x42, 0x38, 0xe0, 0xe0, 0x5e, 0x07, 0xf9, 0xf0, 0x3c, 0xc0, 0x80, 0x91, 0x72, 0x00, 0x83, 0x30, 0x51, 0xf4, 0x8a, 0xe5, 0x91, 0xe0, 0x90, 0x93);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe1, 0x02, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0x09, 0xc0, 0x8c, 0xe5, 0x91, 0xe0, 0x90, 0x93, 0xe1, 0x02, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0x82, 0xe0, 0x90, 0xe0, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x23, 0xc0, 0x80, 0x91, 0x73, 0x00, 0x83, 0x30, 0x51, 0xf4, 0x8a, 0xe5, 0x91, 0xe0, 0x90, 0x93, 0xe1, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0x09, 0xc0, 0x8c, 0xe5, 0x91, 0xe0, 0x90, 0x93, 0xe1, 0x02, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0x82, 0xe0, 0x90, 0xe0, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x05, 0xc0, 0x0e, 0x94, 0x2b, 0x08, 0x02, 0xc0, 0x0e, 0x94, 0x2b, 0x08, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0x79, 0xf0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x81, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x22, 0x24, 0x33, 0x24, 0x30, 0x92, 0xe5, 0x02, 0x20, 0x92, 0xe4, 0x02, 0x82, 0xe0, 0x90, 0xe0, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x0e, 0x94, 0xd3, 0x0c, 0x08, 0x95, 0x0e, 0x94, 0xd0, 0x0c, 0x80, 0x91, 0xe8, 0x02, 0x84, 0x30, 0xa1, 0xf4, 0x80, 0x91, 0xce, 0x02, 0x82, 0x30, 0x81, 0xf4, 0x20, 0x90, 0xd0, 0x02, 0x30, 0x90);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xd1, 0x02, 0x22, 0x20, 0x51, 0xf4, 0x33, 0x20, 0x41, 0xf4, 0x20, 0x90, 0xd4, 0x02, 0x30, 0x90, 0xd5, 0x02, 0x22, 0x20, 0x11, 0xf4, 0x33, 0x20, 0x19, 0xf0, 0x0e, 0x94, 0x2b, 0x08, 0x2c, 0xc0, 0x40, 0x91, 0xd2, 0x02, 0x55, 0x27, 0x41, 0x38, 0xe0, 0xe0, 0x5e, 0x07, 0x29, 0xf0, 0x42, 0x38, 0xe0, 0xe0, 0x5e, 0x07, 0x81, 0xf0, 0x1e, 0xc0, 0x80, 0x91, 0x20, 0x15, 0x89, 0x7f);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x80, 0x93, 0x20, 0x15, 0x28, 0x2e, 0x20, 0x92, 0x20, 0x15, 0x8e, 0x7f, 0x80, 0x93, 0x20, 0x15, 0x22, 0x24, 0x20, 0x92, 0x72, 0x00, 0x11, 0xc0, 0x80, 0x91, 0x30, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x30, 0x15, 0x28, 0x2e, 0x20, 0x92, 0x30, 0x15, 0x8e, 0x7f, 0x80, 0x93, 0x30, 0x15, 0x22, 0x24, 0x20, 0x92, 0x73, 0x00, 0x02, 0xc0, 0x0e, 0x94, 0x2b, 0x08, 0x80, 0x91, 0x71, 0x00);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x84, 0x30, 0x61, 0xf0, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0x0e, 0x94, 0xd3, 0x0c, 0x08, 0x95, 0x0e, 0x94, 0xce, 0x0c, 0x44, 0x27, 0x20, 0x90, 0xd0, 0x02, 0x30, 0x90, 0xd1, 0x02, 0x22, 0x20, 0x09, 0xf0, 0x45, 0xc0, 0x33, 0x20, 0x09, 0xf0, 0x42, 0xc0, 0x80, 0x91);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe8, 0x02, 0x84, 0x30, 0xa1, 0xf4, 0x80, 0x91, 0xce, 0x02, 0x82, 0x30, 0x81, 0xf4, 0x20, 0x90, 0xd0, 0x02, 0x30, 0x90, 0xd1, 0x02, 0x22, 0x20, 0x51, 0xf4, 0x33, 0x20, 0x41, 0xf4, 0x20, 0x90, 0xd4, 0x02, 0x30, 0x90, 0xd5, 0x02, 0x22, 0x20, 0x11, 0xf4, 0x33, 0x20, 0x19, 0xf0, 0x0e, 0x94, 0x2b, 0x08, 0x29, 0xc0, 0x60, 0x91, 0xd2, 0x02, 0x77, 0x27, 0x61, 0x38, 0xe0, 0xe0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x7e, 0x07, 0x29, 0xf0, 0x62, 0x38, 0xe0, 0xe0, 0x7e, 0x07, 0x69, 0xf0, 0x18, 0xc0, 0x80, 0x91, 0x20, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x20, 0x15, 0x84, 0x60, 0x80, 0x93, 0x20, 0x15, 0x83, 0xe0, 0x80, 0x93, 0x72, 0x00, 0x11, 0xc0, 0x80, 0x91, 0x30, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x30, 0x15, 0x84, 0x60, 0x80, 0x93, 0x30, 0x15, 0x83, 0xe0, 0x80, 0x93, 0x73, 0x00, 0x05, 0xc0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x0e, 0x94, 0x2b, 0x08, 0x02, 0xc0, 0x0e, 0x94, 0x2b, 0x08, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0xa1, 0xf0, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0x44, 0x23, 0x31, 0xf0, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x40, 0x93, 0x09, 0x15, 0x0e, 0x94, 0xbf, 0x0c);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x08, 0x95, 0x20, 0x90, 0xce, 0x02, 0x22, 0x20, 0xc9, 0xf4, 0x20, 0x90, 0xd2, 0x02, 0x30, 0x90, 0xd3, 0x02, 0x22, 0x20, 0x99, 0xf4, 0x33, 0x20, 0x89, 0xf4, 0x20, 0x90, 0xd4, 0x02, 0x30, 0x90, 0xd5, 0x02, 0x22, 0x20, 0x59, 0xf4, 0x33, 0x20, 0x49, 0xf4, 0x8f, 0xe7, 0x90, 0xe0, 0x20, 0x90, 0xd0, 0x02, 0x30, 0x90, 0xd1, 0x02, 0x82, 0x15, 0x93, 0x05, 0x10, 0xf4, 0x0e, 0x94);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x2b, 0x08, 0x85, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x20, 0x90, 0xd0, 0x02, 0x22, 0x20, 0x21, 0xf0, 0x83, 0xe0, 0x80, 0x93, 0xe8, 0x02, 0x03, 0xc0, 0x82, 0xe0, 0x80, 0x93, 0xe8, 0x02, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0x61, 0xf0, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x08, 0x95, 0x0e, 0x94, 0xd0, 0x0c, 0x22, 0x97, 0x80, 0x91, 0xd1, 0x02, 0x82, 0x30, 0x09, 0xf0, 0x6b, 0xc0, 0x81, 0xe0, 0x80, 0x93, 0xdc, 0x02, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x20, 0x90, 0x01, 0x15, 0x21, 0xfe, 0x1f, 0xc0, 0x89, 0xe0, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x22, 0x27, 0x33, 0x27, 0x0e, 0xe9, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x82, 0xe2);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x29, 0xe0, 0x30, 0xe0, 0x00, 0xeb, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x87, 0xe0, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x2b, 0xe2, 0x30, 0xe0, 0x02, 0xed, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x1e, 0xc0, 0x89, 0xe0, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x22, 0x27, 0x33, 0x27, 0x0e, 0xe9, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x82, 0xe2);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x29, 0xe0, 0x30, 0xe0, 0x00, 0xeb, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x87, 0xe0, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x2b, 0xe2, 0x30, 0xe0, 0x09, 0xed, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x20, 0x90, 0xa0, 0x00, 0x30, 0x90, 0xa1, 0x00, 0x30, 0x92, 0xe7, 0x02, 0x20, 0x92, 0xe6, 0x02, 0x20, 0x90, 0xe6, 0x02, 0x30, 0x90, 0xe7, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x40, 0x90, 0xd4, 0x02, 0x50, 0x90, 0xd5, 0x02, 0x42, 0x14, 0x53, 0x04, 0x30, 0xf4, 0x24, 0x2c, 0x35, 0x2c, 0x30, 0x92, 0xe7, 0x02, 0x20, 0x92, 0xe6, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x22, 0x24, 0x33, 0x24, 0x30, 0x92, 0xe5, 0x02, 0x20, 0x92, 0xe4, 0x02, 0xe5, 0xc0, 0x80, 0x91, 0xd1, 0x02, 0x87, 0x30, 0x09, 0xf0, 0x6b, 0xc0, 0x81, 0xe0, 0x80, 0x93, 0xdc, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x20, 0x90, 0x01, 0x15, 0x21, 0xfe, 0x1f, 0xc0, 0x89, 0xe0, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x22, 0x27, 0x33, 0x27, 0x07, 0xea, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x82, 0xe2, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x29, 0xe0, 0x30, 0xe0, 0x00, 0xeb, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x87, 0xe0, 0x90, 0xe0, 0x99, 0x83);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x88, 0x83, 0x2b, 0xe2, 0x30, 0xe0, 0x09, 0xed, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x1e, 0xc0, 0x89, 0xe0, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x22, 0x27, 0x33, 0x27, 0x07, 0xea, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x82, 0xe2, 0x90, 0xe0, 0x99, 0x83, 0x88, 0x83, 0x29, 0xe0, 0x30, 0xe0, 0x00, 0xeb, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x87, 0xe0, 0x90, 0xe0, 0x99, 0x83);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x88, 0x83, 0x2b, 0xe2, 0x30, 0xe0, 0x02, 0xed, 0x10, 0xe0, 0x0e, 0x94, 0x07, 0x08, 0x20, 0x90, 0xa9, 0x00, 0x30, 0x90, 0xaa, 0x00, 0x30, 0x92, 0xe7, 0x02, 0x20, 0x92, 0xe6, 0x02, 0x20, 0x90, 0xe6, 0x02, 0x30, 0x90, 0xe7, 0x02, 0x40, 0x90, 0xd4, 0x02, 0x50, 0x90, 0xd5, 0x02, 0x42, 0x14, 0x53, 0x04, 0x30, 0xf4, 0x24, 0x2c, 0x35, 0x2c, 0x30, 0x92, 0xe7, 0x02, 0x20, 0x92);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe6, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x22, 0x24, 0x33, 0x24, 0x30, 0x92, 0xe5, 0x02, 0x20, 0x92, 0xe4, 0x02, 0x75, 0xc0, 0x40, 0x91, 0xd1, 0x02, 0x55, 0x27, 0x41, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0x49, 0xf0, 0x43, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0x39, 0xf1, 0x46, 0x30, 0xe0, 0xe0, 0x5e, 0x07, 0x91, 0xf0, 0x45, 0xc0, 0x82, 0xe8, 0x90, 0xe0, 0x90, 0x93, 0xe1, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0x20, 0x90, 0x82, 0x00, 0x33, 0x24, 0x30, 0x92, 0xe7, 0x02, 0x20, 0x92, 0xe6, 0x02, 0x36, 0xc0, 0x84, 0xe9, 0x90, 0xe0, 0x90, 0x93, 0xe1, 0x02, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0x20, 0x90, 0x94, 0x00, 0x33, 0x24, 0x30, 0x92, 0xe7, 0x02, 0x20, 0x92, 0xe6, 0x02, 0x25, 0xc0, 0x83, 0xe0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x90, 0xd0, 0x02, 0x82, 0x15, 0x18, 0xf4, 0x0e, 0x94, 0x2b, 0x08, 0x1d, 0xc0, 0x82, 0xe5, 0x91, 0xe0, 0xe0, 0x91, 0xd0, 0x02, 0xff, 0x27, 0xee, 0x0f, 0xff, 0x1f, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x80, 0x31, 0x80, 0x30, 0x92, 0xe1, 0x02, 0x20, 0x92, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0xe2, 0x2d, 0xf3, 0x2d, 0x20, 0x80, 0x33, 0x24, 0x30, 0x92, 0xe7, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x92, 0xe6, 0x02, 0x02, 0xc0, 0x0e, 0x94, 0x2b, 0x08, 0x20, 0x90, 0xe6, 0x02, 0x30, 0x90, 0xe7, 0x02, 0x40, 0x90, 0xd4, 0x02, 0x50, 0x90, 0xd5, 0x02, 0x42, 0x14, 0x53, 0x04, 0x30, 0xf4, 0x24, 0x2c, 0x35, 0x2c, 0x30, 0x92, 0xe7, 0x02, 0x20, 0x92, 0xe6, 0x02, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0x49, 0xf0, 0x81, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x22, 0x24, 0x33, 0x24);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x30, 0x92, 0xe5, 0x02, 0x20, 0x92, 0xe4, 0x02, 0x22, 0x96, 0x0e, 0x94, 0xd3, 0x0c, 0x08, 0x95, 0x80, 0x91, 0xce, 0x02, 0x80, 0x38, 0xc1, 0xf4, 0x20, 0x90, 0xd0, 0x02, 0x30, 0x90, 0xd1, 0x02, 0x22, 0x20, 0x91, 0xf4, 0x33, 0x20, 0x81, 0xf4, 0x20, 0x90, 0xd2, 0x02, 0x30, 0x90, 0xd3, 0x02, 0x22, 0x20, 0x51, 0xf4, 0x33, 0x20, 0x41, 0xf4, 0x80, 0x91, 0xd4, 0x02, 0x90, 0x91);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xd5, 0x02, 0x81, 0x30, 0xe0, 0xe0, 0x9e, 0x07, 0x19, 0xf0, 0x0e, 0x94, 0x2b, 0x08, 0x1d, 0xc0, 0x81, 0xe0, 0x90, 0xe0, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x80, 0x91, 0xe8, 0x02, 0x84, 0x30, 0x51, 0xf4, 0x8a, 0xe5, 0x91, 0xe0, 0x90, 0x93, 0xe1, 0x02, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0x09, 0xc0, 0x8c, 0xe5, 0x91, 0xe0, 0x90, 0x93);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe1, 0x02, 0x80, 0x93, 0xe0, 0x02, 0x81, 0xe0, 0x80, 0x93, 0x70, 0x00, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0x49, 0xf0, 0x81, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x22, 0x24, 0x33, 0x24, 0x30, 0x92, 0xe5, 0x02, 0x20, 0x92, 0xe4, 0x02, 0x08, 0x95, 0x80, 0x91, 0xe8, 0x02, 0x82, 0x30, 0xe9, 0xf0, 0x20, 0x90, 0xce, 0x02, 0x22, 0x20, 0xc9, 0xf4, 0x20, 0x90, 0xd2, 0x02, 0x30, 0x90);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xd3, 0x02, 0x22, 0x20, 0x99, 0xf4, 0x33, 0x20, 0x89, 0xf4, 0x20, 0x90, 0xd4, 0x02, 0x30, 0x90, 0xd5, 0x02, 0x22, 0x20, 0x59, 0xf4, 0x33, 0x20, 0x49, 0xf4, 0x81, 0xe0, 0x90, 0xe0, 0x20, 0x90, 0xd0, 0x02, 0x30, 0x90, 0xd1, 0x02, 0x82, 0x15, 0x93, 0x05, 0x18, 0xf4, 0x0e, 0x94, 0x2b, 0x08, 0x24, 0xc0, 0x22, 0x24, 0x30, 0x90, 0xd0, 0x02, 0x23, 0x14, 0xc0, 0xf4, 0x84, 0xe0);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x80, 0x93, 0xe8, 0x02, 0x20, 0x92, 0x72, 0x00, 0x20, 0x92, 0x73, 0x00, 0x80, 0x91, 0x20, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x20, 0x15, 0x28, 0x2e, 0x20, 0x92, 0x20, 0x15, 0x80, 0x91, 0x30, 0x15, 0x89, 0x7f, 0x80, 0x93, 0x30, 0x15, 0x28, 0x2e, 0x20, 0x92, 0x30, 0x15, 0x07, 0xc0, 0x83, 0xe0, 0x80, 0x93, 0xe8, 0x02, 0x80, 0x93, 0x72, 0x00, 0x80, 0x93, 0x73, 0x00, 0x80, 0x91);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x71, 0x00, 0x84, 0x30, 0x61, 0xf0, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0x08, 0x95, 0x80, 0x91, 0xe8, 0x02, 0x84, 0x30, 0xa1, 0xf4, 0x20, 0x90, 0xd0, 0x02, 0x30, 0x90, 0xd1, 0x02, 0x22, 0x20, 0x71, 0xf4, 0x33, 0x20, 0x61, 0xf4, 0x80, 0x91, 0xce, 0x02, 0x81, 0x38);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x41, 0xf4, 0x80, 0x91, 0xd4, 0x02, 0x90, 0x91, 0xd5, 0x02, 0x81, 0x30, 0xe0, 0xe0, 0x9e, 0x07, 0x19, 0xf0, 0x0e, 0x94, 0x2b, 0x08, 0x28, 0xc0, 0x81, 0xe0, 0x90, 0xe0, 0x90, 0x93, 0xe7, 0x02, 0x80, 0x93, 0xe6, 0x02, 0x20, 0x90, 0xd2, 0x02, 0x30, 0x90, 0xd3, 0x02, 0x22, 0x20, 0x11, 0xf4, 0x33, 0x20, 0x41, 0xf0, 0x80, 0x91, 0xd2, 0x02, 0x90, 0x91, 0xd3, 0x02, 0x81, 0x30);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe0, 0xe0, 0x9e, 0x07, 0x81, 0xf4, 0x85, 0xe9, 0x91, 0xe0, 0x20, 0x90, 0xd2, 0x02, 0x30, 0x90, 0xd3, 0x02, 0x28, 0x0e, 0x39, 0x1e, 0x30, 0x92, 0xe3, 0x02, 0x20, 0x92, 0xe2, 0x02, 0x22, 0x24, 0x20, 0x92, 0x70, 0x00, 0x02, 0xc0, 0x0e, 0x94, 0x2b, 0x08, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0x49, 0xf0, 0x81, 0xe0, 0x80, 0x93, 0x71, 0x00, 0x22, 0x24, 0x33, 0x24, 0x30, 0x92);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe5, 0x02, 0x20, 0x92, 0xe4, 0x02, 0x08, 0x95, 0x80, 0x91, 0xce, 0x02, 0x81, 0x30, 0x41, 0xf4, 0x20, 0x90, 0xd4, 0x02, 0x30, 0x90, 0xd5, 0x02, 0x22, 0x20, 0x11, 0xf4, 0x33, 0x20, 0x19, 0xf0, 0x0e, 0x94, 0x2b, 0x08, 0x22, 0xc0, 0x80, 0x91, 0xd2, 0x02, 0x90, 0x91, 0xd3, 0x02, 0x82, 0x30, 0xe0, 0xe0, 0x9e, 0x07, 0xd0, 0xf4, 0x85, 0xe9, 0x91, 0xe0, 0xe0, 0x91, 0xd2, 0x02);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xf0, 0x91, 0xd3, 0x02, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x90, 0xd0, 0x02, 0x30, 0x90, 0xd1, 0x02, 0x20, 0x82, 0xe0, 0x91, 0xd2, 0x02, 0xf0, 0x91, 0xd3, 0x02, 0xe8, 0x0f, 0xf9, 0x1f, 0x20, 0x80, 0x22, 0x20, 0x19, 0xf0, 0x0e, 0x94, 0x37, 0x08, 0x01, 0xc0, 0x00, 0x00, 0x80, 0x91, 0x71, 0x00, 0x84, 0x30, 0x61, 0xf0, 0x20, 0x90, 0x1c, 0x15, 0x27, 0xfc, 0xfc, 0xcf, 0x22, 0x24);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0x20, 0x92, 0x1b, 0x15, 0x80, 0x91, 0x1c, 0x15, 0x80, 0x68, 0x80, 0x93, 0x1c, 0x15, 0x08, 0x95, 0xe2, 0xe0, 0x0c, 0x94, 0xd4, 0x0c, 0xe4, 0xe0, 0x0c, 0x94, 0xd4, 0x0c, 0xee, 0x27, 0x0c, 0x94, 0xd4, 0x0c, 0xfa, 0x92, 0xea, 0x92, 0xda, 0x92, 0xca, 0x92, 0xba, 0x92, 0xaa, 0x92, 0x7a, 0x93, 0x6a, 0x93, 0x5a, 0x93, 0x4a, 0x93, 0x08, 0x95, 0xe1, 0xe0, 0x49, 0x91, 0x59, 0x91);
	SEND(kUSBRqClearFeature, 0x0000, 0x0005, 0x05, 0xff, 0xe0, 0xfd, 0x08, 0x95, 0x69, 0x91, 0x79, 0x91, 0xe1, 0xfd, 0x08, 0x95, 0xa9, 0x90, 0xb9, 0x90, 0xe2, 0xfd, 0x08, 0x95, 0xc9, 0x90, 0xd9, 0x90, 0xe3, 0xfd, 0x08, 0x95, 0xe9, 0x90, 0xf9, 0x90, 0x08, 0x95, 0x22, 0x23, 0x21, 0xf0, 0x00, 0x0f, 0x11, 0x1f, 0x2a, 0x95, 0xfa, 0xcf, 0x08, 0x95);
	SEND(kUSBRqClearFeature, 0x0000, 0x0007, 0x07, 0x00);
}

#pragma mark -ECVCaptureDevice(ECVAbstract)

- (UInt32)maximumMicrosecondsInFrame
{
	return kUSBHighSpeedMicrosecondsInFrame;
}
- (NSArray *)supportedVideoSources
{
    return [NSArray array];
}
- (ECVVideoSource *)defaultVideoSource
{
	return nil;
}
- (NSSet *)supportedVideoFormats
{
	return [NSSet set];
}
- (ECVVideoFormat *)defaultVideoFormat
{
	return nil;
}
- (OSType)pixelFormat
{
	return k2vuyPixelFormat;
}

#pragma mark -ECVCaptureDevice(ECVDisplaying)

- (void)ECV_display
{
	[self play];
}

@end
